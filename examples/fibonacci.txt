//////////////////////////////////////////////////////////
//
//  Sample to compute fibonacci numbers 
//
//////////////////////////////////////////////////////////


// Using simple recursion
// ----------------------

fib1 @FN [n] 
{
  @IF (n <= 0) then: { @RETURN 0; }; 
  @IF (n == 1) then: { @RETURN 1; };

  @VAR n1 = n; @VAR n2 = n; 

  

  (@fib1 (n1-1)) + (@fib1 (n2-2)); 
};


@VAR i value:-1;

@LOOP while:(i <= 20)
{
  @SAY "@fib1<" i "> = " (@fib1 i);
  i++;
};


// Using manual tail call (@XCTL verb)
// ----------------------

fib2 @FN [n]
{
   @VAR fibx value:
   (
      @FN [a b n] 
      {
         @IF (n <= 0) then:{ @RETURN a };
         
      // @RETURN @fibx b (a+b) (n-1);
         @XCTL "fibx" right:[b (a+b) (n-1)];
      }
   );
   @fibx(0, 1, n);  
};


i = -1; 
@LOOP while:(i <= 90)
{
  @SAY "@fib2" i " = " (@fib2 i);
  i++;
};
