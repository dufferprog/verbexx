//////////////////////////////////////////////////////////
//
//  Sample to compute fibonacci numbers 
//
//////////////////////////////////////////////////////////


// Using simple recursion
// ----------------------

fib1 @FN [n] 
{
  @IF (n<=0) then:{ @RETURN 0 }; 
  @IF (n==1) then:{ @RETURN 1 };  
  (@fib1 n-1) + (@fib1 n-2); 
};

@LOOP init:{@VAR i = -1} while:(i <= 20) next:{i++}
{ @SAY "@fib1<" i "> = " (@fib1 i) };


// Using manual tail call (@XCTL verb)
// ----------------------

fib2 @FN [n]
{
   @VAR fibx value:
   (
      @FN [a b n] 
      {
         @IF (n <= 0) then:{ @RETURN a };
         
      // @RETURN @fibx b (a+b) (n-1);
         @XCTL "fibx" right:[b (a+b) (n-1)];
      }
   );
   @fibx(0, 1, n);  
};


@LOOP init:{i = -1} while:(i <= 91) next:{i++}
{ @SAY "@fib2<" i "> = " (@fib2 i) };
