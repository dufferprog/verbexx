// h_map_tile.h

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////
//// 
////     ============
////     h_map_tile.h   -- Tile oriented definitions  
////     ============
////     
//// 
////     contains definitions for DEM file coverage and related items
//// 
////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
#pragma once
#include "h_map_types.h"



//-----------------------------------------------------------------------------------------------------------------------------------
//     Filename and latitude/longitude tiling oriented items (for read-in files, etc.)    ????????????????? needs to be simplified - -use info from file_info_S -- get rid of whole 1st portion of this structure
//-----------------------------------------------------------------------------------------------------------------------------------

// note: all values are "nominal" -- do not take into account pixel edge overlap, etc.

struct tile_S
{
    // output results from tile selection and filename generation -- current fn and tile boundary info    (file may not exist)

    std::wstring      basename          {            }      ;     // basename derived from tile corner
    std::wstring      filename          {            }      ;     // full derived pathname/filename -- includes file type, unless multi_ft flag is true  
                                                            
    ll_T              curr_south        { INT_MIN    }      ;     // nominal south edge of located tile -- in arc-sec
    ll_T              curr_west         { INT_MIN    }      ;     // nominal west  edge of located tile -- in arc-sec 
    ll_T              curr_north        { INT_MIN    }      ;     // nominal north edge of located tile -- in arc-sec
    ll_T              curr_east         { INT_MIN    }      ;     // nominal east  edge of located tile -- in arc-sec 
};





////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//---------------------------------------------------------------------------------------------------------------------
//     tile_S oriented function prototypes
//---------------------------------------------------------------------------------------------------------------------

void     reset_tile(                tile_S&                                                                                           );
void     display_tile(        const tile_S&                                                                                           ); 
void     tile_filename(             tile_S&,         ll_T,   ll_T, ll_T, ll_T,               const fileinfo_S&, bool = false, int = 0 );
int      adjust_longitude(    const tile_S&, llr_T,  llr_T&                                , const fileinfo_S&                        );      // tile versions only -- also see h.grid_h
int      adjust_longitude(    const tile_S&, ll_T ,  ll_T&                                 , const fileinfo_S&                        );      // tile versions only -- also see h_grid.h      

//_____________________________________________________________________________________________________________________
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""