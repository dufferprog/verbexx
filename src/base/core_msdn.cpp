// core_msdn.cpp

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////
////
////        ==================================
////        Example code from MSDN (Microsoft)
////        ==================================
////
////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "h__include.h" 
#pragma hdrstop("../pch/pch_std.pch")

#define M_IN_CORE_DLL

#include "h__common.h"




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//  GetEncoderClsid() -- get encoder CLSID -- used for saving images to TIFF, PNG, etc.
//  =================    -------------------------------------------------------------- 
//
//
//      modified to add  "Gdiplus::" namespace in several places
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

M_CORE_IMPEXP
int GetEncoderClsid(const WCHAR* format, CLSID* pClsid) try
{
   UINT  num = 0;          // number of image encoders
   UINT  size = 0;         // size of the image encoder array in bytes

   Gdiplus::ImageCodecInfo* pImageCodecInfo = NULL;

   Gdiplus::GetImageEncodersSize(&num, &size);
   if(size == 0)
      return -1;  // Failure

   pImageCodecInfo = (Gdiplus::ImageCodecInfo*)(malloc(size));
   if(pImageCodecInfo == NULL)
      return -1;  // Failure

   Gdiplus::GetImageEncoders(num, size, pImageCodecInfo);

   for(UINT j = 0; j < num; ++j)
   {
      if( wcscmp(pImageCodecInfo[j].MimeType, format) == 0 )
      {
         *pClsid = pImageCodecInfo[j].Clsid;
         free(pImageCodecInfo);
         return j;  // Success
      }    
   }

   free(pImageCodecInfo);
   return -1;  // Failure
}
M_endf

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////