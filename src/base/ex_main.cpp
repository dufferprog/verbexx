// ex_main.cpp

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////
//// 
////     ============
////     ex_main.cpp
////     ============
//// 
//// 
////     note: Invocation:   ex parm1 parm2 ...   --    usually just:    ex   imbed_file.txt
//// 
////
////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "h__include.h"
#pragma hdrstop("../pch/pch_std.pch")

#define M_IN_EX_DLL

#include "h__common.h"

#include "h_ex_interface.h"


////_____________________________________________________________________________________________________________________
////\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
/////\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
////"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
////
////
////   ex_main()
////
////
////_____________________________________________________________________________________________________________________
////\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
/////\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
////"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

M_EX_IMPEXP 
int ex_main(int argc, wchar_t *argv[]) try
{
    // initial environment setup        
    // -------------------------

    capture_pc_time(1);
    setup_environment(); 


    // get info from command line -- note main_pathname will not be empty unless error_ct() > 0 
    // ----------------------------------------------------------------------------------------

    auto main_pathname = process_cmdline_ext(argc, argv);                                  // setup verbexx processing based on command line parms     

   // M_y(M_out(L"ex_main() -- et = %.9f") % elapsed_pc_time(1);)

                                                                                   
    // parse and evaluate the input token stream (top level)                                       
    // -----------------------------------------                                        
                                             
    int wmain_rc { 1 };                                                                    // return code for wmain() = 1, in case any errors prevent process_main_ext from being called 

    if (error_count() == 0)                                                                // bypass input file processing, if any errors so far
        wmain_rc = process_main_ext(main_pathname);                                        // parse input token stream and interpret the resulting AST  


    // put out summary messsage (if requested), and return from wmain()
    // ----------------------------------------------------------------
    
    if (log_statistics() != log_E::none)
    {
        M_out( L"\nex_main() : ending -- errors=%d %51t elapsed time = %.6f seconds")      // %51t accounts for \n at front of format string
             % error_count()
             % elapsed_pc_time(1)
             ;   
    }


    M__(M_out(L"ex_main() returning -- wmain_rc = %d") % wmain_rc;) 
    return wmain_rc;
}
M_endf_handle_r(-1)



//_____________________________________________________________________________________________________________________
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""